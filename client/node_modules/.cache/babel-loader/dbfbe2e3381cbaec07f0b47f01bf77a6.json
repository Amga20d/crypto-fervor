{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\crypto-fervor\\\\crypto-fervor\\\\src\\\\components\\\\CryptoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Data from \"./Data\";\nimport classes from './CryptoItem.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CryptoItem() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.coincap.io/v2/assets\").then(res => res.json()).then(result => {\n      //   setIsLoaded(true);\n      setItems(result.data);\n    } // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    // (error) => {\n    //   setIsLoaded(true);\n    //   setError(error);\n    // }\n    );\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      className: classes.table,\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        className: classes.th,\n        children: \"rank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: classes.th,\n        children: \"name and symbol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: classes.th,\n        children: \"price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: classes.th,\n        children: \"Market Capital Usd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: classes.th,\n        children: \"fervor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), items.map(item => {\n      var _Data$find;\n\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: `${item.name} ${item.symbol}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [item.priceUsd, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.marketCapUsd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: ((_Data$find = Data.find(el => el.id === item.id)) === null || _Data$find === void 0 ? void 0 : _Data$find.fervor) || \"not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CryptoItem, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n\n_c = CryptoItem;\nexport default CryptoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoItem\");","map":{"version":3,"sources":["C:/react/crypto-fervor/crypto-fervor/src/components/CryptoItem.js"],"names":["React","useEffect","useState","Data","classes","CryptoItem","items","setItems","fetch","then","res","json","result","data","table","th","map","item","rank","name","symbol","priceUsd","marketCapUsd","find","el","id","fervor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;;;AAKA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV;AACAL,MAAAA,QAAQ,CAACK,MAAM,CAACC,IAAR,CAAR;AACD,KANL,CAOI;AACA;AACA;AACA;AACA;AACA;AACA;AAbJ;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAET,OAAO,CAACU,KAAvB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAEV,OAAO,CAACW,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAEX,OAAO,CAACW,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,SAAS,EAAEX,OAAO,CAACW,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAI,QAAA,SAAS,EAAEX,OAAO,CAACW,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAI,QAAA,SAAS,EAAEX,OAAO,CAACW,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQGT,KAAK,CAACU,GAAN,CAAWC,IAAD;AAAA;;AAAA,0BACT;AAAA,gCACE;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAM,GAAED,IAAI,CAACE,IAAK,IAAGF,IAAI,CAACG,MAAO;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,qBAAKH,IAAI,CAACI,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,oBAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,oBAAK,eAAAnB,IAAI,CAACoB,IAAL,CAAWC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUR,IAAI,CAACQ,EAAjC,2DAAsCC,MAAtC,KAAgD;AAArD;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADS;AAAA,KAAV,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA3CQrB,U;;KAAAA,U;AA6CT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Data from \"./Data\";\r\n\r\nimport classes from './CryptoItem.module.css'\r\n\r\n\r\n\r\n\r\nfunction CryptoItem() {\r\n  const [items, setItems] = useState([]);\r\n \r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.coincap.io/v2/assets\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          //   setIsLoaded(true);\r\n          setItems(result.data);\r\n        }\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        // (error) => {\r\n        //   setIsLoaded(true);\r\n        //   setError(error);\r\n        // }\r\n      );\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <tr className={classes.table}>\r\n        <th className={classes.th}>rank</th>\r\n        <th className={classes.th}>name and symbol</th>\r\n        <th className={classes.th}>price</th>\r\n        <th className={classes.th}>Market Capital Usd</th>\r\n        <th className={classes.th}>fervor</th>\r\n      </tr>\r\n      {items.map((item) => (\r\n        <tr>\r\n          <td>{item.rank}</td>\r\n          <td>{`${item.name} ${item.symbol}`}</td>\r\n          <td>{item.priceUsd} </td>\r\n          <td>{item.marketCapUsd}</td>\r\n          <td>{Data.find((el) => el.id === item.id)?.fervor || \"not found\"}</td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CryptoItem;\r\n"]},"metadata":{},"sourceType":"module"}