{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\crypto-fervor\\\\crypto-fervor\\\\src\\\\components\\\\CryptoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  id: \"bitcoin\",\n  rank: \"1\",\n  symbol: \"BTC\",\n  name: \"Bitcoin\",\n  priceUsd: \"6929.8217756835584756\",\n  fervor: \"High\"\n}, {\n  id: \"ethereum\",\n  rank: \"2\",\n  symbol: \"ETH\",\n  name: \"Ethereum\",\n  priceUsd: \"404.9774667045200896\",\n  fervor: \"High\"\n}, {\n  id: \"ripple\",\n  rank: \"3\",\n  symbol: \"XRP\",\n  name: \"XRP\",\n  priceUsd: \"0.4202870472643482\",\n  fervor: \"High\"\n}, {\n  id: \"bitcoin-cash\",\n  rank: \"4\",\n  symbol: \"BCH\",\n  name: \"Bitcoin Cash\",\n  priceUsd: \"688.8617162705108413\",\n  fervor: \"High\"\n}, {\n  id: \"eos\",\n  rank: \"5\",\n  symbol: \"EOS\",\n  name: \"EOS\",\n  priceUsd: \"6.9823147841833210\",\n  fervor: \"High\"\n}, {\n  id: \"stellar\",\n  rank: \"6\",\n  symbol: \"XLM\",\n  name: \"Stellar\",\n  priceUsd: \"0.2341611226032443\",\n  fervor: \"High\"\n}, {\n  id: \"litecoin\",\n  rank: \"7\",\n  symbol: \"LTC\",\n  name: \"Litecoin\",\n  priceUsd: \"73.3479339685586096\"\n}, {\n  id: \"cardano\",\n  rank: \"8\",\n  symbol: \"ADA\",\n  name: \"Cardano\",\n  priceUsd: \"0.1289256506716951\",\n  fervor: \"High\"\n}, {\n  id: \"tether\",\n  rank: \"9\",\n  symbol: \"USDT\",\n  name: \"Tether\",\n  priceUsd: \"1.0009115584940656\",\n  fervor: \"High\"\n}, {\n  id: \"iota\",\n  rank: \"10\",\n  symbol: \"MIOTA\",\n  name: \"IOTA\",\n  priceUsd: \"0.8647409095440071\",\n  fervor: \"High\"\n}];\n\nfunction CryptoItem() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.coincap.io/v2/assets\").then(res => res.json()).then(result => {\n      //   setIsLoaded(true);\n      setItems(result.data);\n    } // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    // (error) => {\n    //   setIsLoaded(true);\n    //   setError(error);\n    // }\n    );\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"rank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"name and symbol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"fervor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.rank\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${item.name} ${item.symbol}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [item.priceUsd, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.find(el => el.id === item.id).fervor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 12\n      }, this) || /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 71\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CryptoItem, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n\n_c = CryptoItem;\nexport default CryptoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoItem\");","map":{"version":3,"sources":["C:/react/crypto-fervor/crypto-fervor/src/components/CryptoItem.js"],"names":["React","useEffect","useState","data","id","rank","symbol","name","priceUsd","fervor","CryptoItem","items","setItems","fetch","then","res","json","result","map","item","find","el"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst data = [\r\n  {\r\n    id: \"bitcoin\",\r\n    rank: \"1\",\r\n    symbol: \"BTC\",\r\n    name: \"Bitcoin\",\r\n    priceUsd: \"6929.8217756835584756\",\r\n    fervor: \"High\",\r\n  },\r\n  {\r\n    id: \"ethereum\",\r\n    rank: \"2\",\r\n    symbol: \"ETH\",\r\n    name: \"Ethereum\",\r\n    priceUsd: \"404.9774667045200896\",\r\n    fervor: \"High\",\r\n  },\r\n  {\r\n    id: \"ripple\",\r\n    rank: \"3\",\r\n    symbol: \"XRP\",\r\n    name: \"XRP\",\r\n    priceUsd: \"0.4202870472643482\",\r\n    fervor: \"High\",\r\n  },\r\n  {\r\n    id: \"bitcoin-cash\",\r\n    rank: \"4\",\r\n    symbol: \"BCH\",\r\n    name: \"Bitcoin Cash\",\r\n    priceUsd: \"688.8617162705108413\",\r\n    fervor: \"High\",\r\n  },\r\n  {\r\n    id: \"eos\",\r\n    rank: \"5\",\r\n    symbol: \"EOS\",\r\n    name: \"EOS\",\r\n    priceUsd: \"6.9823147841833210\",\r\n    fervor: \"High\",\r\n  },\r\n  {\r\n    id: \"stellar\",\r\n    rank: \"6\",\r\n    symbol: \"XLM\",\r\n    name: \"Stellar\",\r\n    priceUsd: \"0.2341611226032443\",\r\n    fervor: \"High\",\r\n  },\r\n  {\r\n    id: \"litecoin\",\r\n    rank: \"7\",\r\n    symbol: \"LTC\",\r\n    name: \"Litecoin\",\r\n    priceUsd: \"73.3479339685586096\",\r\n  },\r\n  {\r\n    id: \"cardano\",\r\n    rank: \"8\",\r\n    symbol: \"ADA\",\r\n    name: \"Cardano\",\r\n    priceUsd: \"0.1289256506716951\",\r\n    fervor: \"High\",\r\n  },\r\n  {\r\n    id: \"tether\",\r\n    rank: \"9\",\r\n    symbol: \"USDT\",\r\n    name: \"Tether\",\r\n    priceUsd: \"1.0009115584940656\",\r\n    fervor: \"High\",\r\n  },\r\n  {\r\n    id: \"iota\",\r\n    rank: \"10\",\r\n    symbol: \"MIOTA\",\r\n    name: \"IOTA\",\r\n    priceUsd: \"0.8647409095440071\",\r\n    fervor: \"High\",\r\n  },\r\n];\r\n\r\nfunction CryptoItem() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.coincap.io/v2/assets\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          //   setIsLoaded(true);\r\n          setItems(result.data);\r\n        }\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        // (error) => {\r\n        //   setIsLoaded(true);\r\n        //   setError(error);\r\n        // }\r\n      );\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <tr>\r\n        <th>rank</th>\r\n        <th>name and symbol</th>\r\n        <th>price</th>\r\n        <th>fervor</th>\r\n      </tr>\r\n      {items.map((item) => (\r\n        <tr>\r\n          <td>{item.rank}</td>\r\n          <td>{`${item.name} ${item.symbol}`}</td>\r\n          <td>{item.priceUsd} </td>\r\n\r\n\r\n          {<td>{data.find((el) => el.id === item.id).fervor }</td> || <td>Not found</td>}\r\n          \r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CryptoItem;\r\n"]},"metadata":{},"sourceType":"module"}