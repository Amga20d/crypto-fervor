{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\crypto-fervor\\\\crypto-fervor\\\\client\\\\src\\\\components\\\\CryptoItem.js\";\nimport React, { useEffect, useState } from \"react\";\nimport classes from './CryptoItem.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CryptoItem(props) {\n  // const [items, setItems] = useState([]);\n  // useEffect(() => {\n  //   fetch(\"//localhost:5000/home\")\n  //     .then((res) => res.json())\n  //     .then(\n  //       (result) => {\n  //         //   setIsLoaded(true);\n  //         setItems(result);\n  //       }\n  //       // Note: it's important to handle errors here\n  //       // instead of a catch() block so that we don't swallow\n  //       // exceptions from actual bugs in components.\n  //       // (error) => {\n  //       //   setIsLoaded(true);\n  //       //   setError(error);\n  //       // }\n  //     );\n  // }, []);\n  const items = props.list;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.table,\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      className: classes.tr,\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        className: classes.th,\n        children: \"Rank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: classes.th,\n        children: \"Name and Symbol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: classes.th,\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: classes.th,\n        children: \"Market Capital Usd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: classes.th,\n        children: \"Previous Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: classes.th,\n        children: \"Current Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: classes.th,\n        children: \"Fervor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: classes.tr,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: classes.td,\n        children: item.rank\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classes.td,\n        children: `${item.name} ${item.symbol}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classes.td,\n        children: [item.priceUsd, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classes.td,\n        children: item.marketCapUsd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classes.td,\n        children: item.prevCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classes.td,\n        children: item.currCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classes.td,\n        children: [item.fervorChange || 'Not found', \" % \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CryptoItem;\nexport default CryptoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoItem\");","map":{"version":3,"sources":["C:/react/crypto-fervor/crypto-fervor/client/src/components/CryptoItem.js"],"names":["React","useEffect","useState","classes","CryptoItem","props","items","list","table","tr","th","map","item","td","rank","name","symbol","priceUsd","marketCapUsd","prevCount","currCount","fervorChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,OAAOC,OAAP,MAAoB,yBAApB;;;AAKA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,KAAK,GAAGD,KAAK,CAACE,IAApB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACK,KAAxB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEL,OAAO,CAACM,EAAvB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAEN,OAAO,CAACO,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAEP,OAAO,CAACO,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,SAAS,EAAEP,OAAO,CAACO,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAI,QAAA,SAAS,EAAEP,OAAO,CAACO,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAI,QAAA,SAAS,EAAEP,OAAO,CAACO,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAI,QAAA,SAAS,EAAEP,OAAO,CAACO,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAI,QAAA,SAAS,EAAEP,OAAO,CAACO,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACT;AAAI,MAAA,SAAS,EAAET,OAAO,CAACM,EAAvB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAEN,OAAO,CAACU,EAAvB;AAAA,kBAA4BD,IAAI,CAACE;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAEX,OAAO,CAACU,EAAvB;AAAA,kBAA6B,GAAED,IAAI,CAACG,IAAK,IAAGH,IAAI,CAACI,MAAO;AAAxD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,SAAS,EAAEb,OAAO,CAACU,EAAvB;AAAA,mBAA4BD,IAAI,CAACK,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAI,QAAA,SAAS,EAAEd,OAAO,CAACU,EAAvB;AAAA,kBAA4BD,IAAI,CAACM;AAAjC;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAI,QAAA,SAAS,EAAEf,OAAO,CAACU,EAAvB;AAAA,kBAA4BD,IAAI,CAACO;AAAjC;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAI,QAAA,SAAS,EAAEhB,OAAO,CAACU,EAAvB;AAAA,kBAA4BD,IAAI,CAACQ;AAAjC;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAI,QAAA,SAAS,EAAEjB,OAAO,CAACU,EAAvB;AAAA,mBAA4BD,IAAI,CAACS,YAAL,IAAqB,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;KAnDQjB,U;AAqDT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nimport classes from './CryptoItem.module.css'\r\n\r\n\r\n\r\n\r\nfunction CryptoItem(props) {\r\n  // const [items, setItems] = useState([]);\r\n \r\n\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\"//localhost:5000/home\")\r\n  //     .then((res) => res.json())\r\n  //     .then(\r\n  //       (result) => {\r\n  //         //   setIsLoaded(true);\r\n  //         setItems(result);\r\n  //       }\r\n        \r\n  //       // Note: it's important to handle errors here\r\n  //       // instead of a catch() block so that we don't swallow\r\n  //       // exceptions from actual bugs in components.\r\n  //       // (error) => {\r\n  //       //   setIsLoaded(true);\r\n  //       //   setError(error);\r\n  //       // }\r\n  //     );\r\n  // }, []);\r\n  const items = props.list;\r\n  \r\n  \r\n\r\n  return (\r\n    <div className={classes.table} >\r\n      <tr className={classes.tr} >\r\n        <th className={classes.th}>Rank</th>\r\n        <th className={classes.th}>Name and Symbol</th>\r\n        <th className={classes.th}>Price</th>\r\n        <th className={classes.th}>Market Capital Usd</th>\r\n        <th className={classes.th}>Previous Count</th>\r\n        <th className={classes.th}>Current Count</th>\r\n        <th className={classes.th}>Fervor</th>\r\n      </tr>\r\n      {items.map((item) => (\r\n        <tr className={classes.tr}> \r\n          <td className={classes.td}>{item.rank}</td>\r\n          <td className={classes.td}>{`${item.name} ${item.symbol}`}</td>\r\n          <td className={classes.td}>{item.priceUsd} </td>\r\n          <td className={classes.td}>{item.marketCapUsd}</td>\r\n          <td className={classes.td}>{item.prevCount}</td>\r\n          <td className={classes.td}>{item.currCount}</td>\r\n          <td className={classes.td}>{item.fervorChange || 'Not found'} % </td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CryptoItem;\r\n"]},"metadata":{},"sourceType":"module"}